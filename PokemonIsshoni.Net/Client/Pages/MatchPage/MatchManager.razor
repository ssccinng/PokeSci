@page "/MatchManager/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using PokemonIsshoni.Net.Shared.Info

@inject ISnackbar Snackbar
@inject HttpClient Http
@inject PCLServices MatchService
@inject UserInfoServices UserServices
@inject NavigationManager Navigation
@inject IDialogService Dialog
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

@if (_pclMatch == null)
{
    @*<PochamaLoading />*@
}
else
{
    <MudContainer MaxWidth=MaxWidth.Large>


        <MudPaper Class="tw-w-full tw-p-5">
            <MudGrid>
                <MudItem xs="12" Class="tw-grid">
                    <MudLink Typo="Typo.h5" Href=@($"MatchDetail/{Id}") Class="tw-justify-self-center tw-text-bold">@_pclMatch.Name</MudLink>
                    @*<MudLink Href=@($"MatchDetail/{Id}") Typo=Typo.subtitle1 Class="tw-justify-self-center"><MudIcon Style="margin-bottom: 0.15rem" Icon=@Icons.Material.Filled.ArrowBack />返回比赛主页</MudLink>*@

                </MudItem>
                <MudItem xs="12">
                    <MudDivider DividerType="DividerType.FullWidth"></MudDivider>
                </MudItem>
                <MudItem xs="12" md="3">
                    <MudText Typo="Typo.body1" Align="Align.Center">比赛状态</MudText>
                    <MudText Typo="Typo.h6" Align="Align.Center">@_pclMatch.MatchState</MudText>
                </MudItem>
                <MudItem xs="12" md="3">
                    <MudText Typo="Typo.body1" Align="Align.Center">比赛阶段</MudText>
                    <MudText Typo="Typo.h6" Align="Align.Center">@(_pclMatch.RoundIdx == -1 ? "未开始" : _pclMatch.PCLMatchRoundList[_pclMatch.RoundIdx].PCLRoundType)</MudText>
                </MudItem>
                <MudItem xs="12" md="3">
                    <MudText Typo="Typo.body1" Align="Align.Center">报名人数</MudText>
                    <MudText Typo="Typo.h6" Align="Align.Center">@_pclMatch.PCLMatchPlayerList.Count</MudText>
                </MudItem>
                @if (isAdmin || _userId == _pclMatch.UserId)
                {
                    <MudItem xs="12" md="3" Class="tw-grid tw-self-center">
                        @if (_pclMatch.RoundIdx == -1)
                        {
                            <MudButton Variant="Variant.Filled" Color="Color.Info" Class="tw-justify-self-center" OnClick=MatchStart>启动比赛</MudButton>
                        }
                        else
                        {
                            if (_pclMatch.MatchState != MatchState.Finished)
                            {
                                <MudButton Variant="Variant.Filled" Class="tw-justify-self-center" Color="Color.Error">结束比赛</MudButton>
                            }

                        }

                    </MudItem>
                }
            </MudGrid>
        </MudPaper>

        <MudTabs Elevation="1" Rounded="true" Centered="true" Color="@Color.Default" Class="tw-mt-2 " @bind-ActivePanelIndex="selectId">
            <MudTabPanel Text="比赛总管理">
                <MudGrid>
                    <MudItem xs="12">
                        <MudTable Items="_pclMatch.PCLMatchPlayerList" RowClass="odd:tw-bg-gray-100">
                            <ToolBarContent>
                                <MudText Typo="Typo.h6">已报名选手</MudText>
                                <MudSpacer />
                                <MudAutocomplete T="UserInfo" Label="添加新成员" @bind-Value="value2" SearchFunc="@SearchUser"
                                             ResetValueOnEmptyText="true"
                                             CoerceText="true"
                                             MaxItems="20"
                                             AdornmentIcon="@Icons.Material.Filled.Add" OnAdornmentClick="(args) => AddUserToMatch(value2)" AdornmentColor="Color.Primary"
                                             ToStringFunc="@(e=> e==null?null : $"{e.NickName}({e.Email})")">
                                    <ItemTemplate>
                                        <MudText>@($"{context.NickName}({context.Email})")</MudText>
                                    </ItemTemplate>
                                </MudAutocomplete>

                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh Style="width:30px"></MudTh>
                                <MudTh></MudTh>
                                <MudTh>昵称</MudTh>
                                <MudTh>邮箱</MudTh>
                                <MudTh>训练师ID</MudTh>
                                <MudTh>参赛QQ</MudTh>
                                <MudTh>参赛ID</MudTh>
                                @if (_pclMatch.NeedCheck)
                                {
                                <MudTh>签到</MudTh>
                                }

                            <MudTh>预提交队伍</MudTh>
                            <MudTh>查看队伍</MudTh>
                            <MudTh>管理</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            @{
                                    UserInfo userInfo = _userDatasDic[context.UserId];
                            }
                            <MudTd></MudTd>
                            <MudTd DataLabel="头像">
                                <MudAvatar Image="@userInfo?.Avatar" />

                            </MudTd>
                            <MudTd DataLabel="昵称">@userInfo?.NickName</MudTd>
                            <MudTd DataLabel="邮箱">@userInfo?.Email</MudTd>
                            <MudTd DataLabel="训练师Id">@userInfo?.TrainerId</MudTd>
                            <MudTd DataLabel="参赛QQ">@context.QQ</MudTd>
                            <MudTd DataLabel="参赛ID">@context.ShadowId</MudTd>
                            @*<MudTd DataLabel="参赛宣言">@context.Declaration</MudTd>*@
                            @if (_pclMatch.NeedCheck)
                                {
                                // 这里要去保存情况
                                <MudTd DataLabel="签到">
                                    <MudCheckBox @bind-Checked="@context.IsChecked"></MudCheckBox>
                                </MudTd>
                                }

                            <MudTd DataLabel="预提交队伍">
                                @if (context.PreTeam.TeamData != "")
                                    {
                                    <MudButton Variant="Variant.Outlined" Size="Size.Small" Class="tw-text-bold" Color="Color.Success" OnClick=@(() => { Dialog.Show<TeamDialogCard>("队伍编辑", new DialogParameters { { "PCLPokeTeam", null } }, new MudBlazor.DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true });})>编辑</MudButton>
                                    }

                                    else
                                    {
                                    <MudButton Variant="Variant.Outlined" Size="Size.Small" Class="tw-text-bold" Color="Color.Error" OnClick=@(() => { Dialog.Show<TeamDialogCard>("队伍编辑", new DialogParameters { { "PCLPokeTeam", new PCLPokeTeam() } }, new MudBlazor.DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true });})>未提交</MudButton>
                                    }
                            </MudTd>
                            <MudTd DataLabel="查看队伍">
                                <MudButton Variant="Variant.Filled" Size="Size.Small" Class="tw-text-bold" Color="Color.Primary" OnClick=@(() => { Dialog.Show<TeamDialogCard>("队伍编辑", new DialogParameters { { "PCLPokeTeam", null } }, new MudBlazor.DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true });})>查看队伍</MudButton>
                            </MudTd>
                            <MudTd DataLabel="管理">
                                <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick=@(() => DeleteUserFromMatch(context))>查看队伍</MudIconButton>
                            </MudTd>

                            @*<MudTd DataLabel="队伍">
                            <MudButton Variant="Variant.Filled" Size="Size.Small" Class="text-bold" Color="Color.Success">编辑</MudButton>
                            </MudTd>*@
                            @*<MudTd DataLabel="参赛宣言">@context.c</MudTd>
                            <MudTd DataLabel="参赛宣言">@context.c</MudTd>*@
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager HideRowsPerPage=true />
                        </PagerContent>
                    </MudTable>
                </MudItem>

                <MudItem xs="12">
                    <MudTable Items="_pclMatch.PCLMatchRefereeList">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">裁判列表</MudText>
                            <MudSpacer />
                            <MudAutocomplete T="UserInfo" Label="添加新裁判" @bind-Value="value3" SearchFunc="@SearchUser"
                                             ResetValueOnEmptyText="true"
                                             CoerceText="true"
                                             AdornmentIcon="@Icons.Material.Filled.Add" OnAdornmentClick="(args) => AddRefereeToMatch(value3, value4)" AdornmentColor="Color.Primary"
                                             ToStringFunc="@(e=> e==null?null : $"{e.NickName}({e.Email})")"
                                             Style="width:300px">
                                <ItemTemplate>
                                    <MudText>@($"{context.NickName}({context.Email})")</MudText>
                                </ItemTemplate>
                            </MudAutocomplete>
                            <MudSelect T="RefereeType" @bind-Value="value4" Style="width:100px">
                                <MudSelectItem Value="RefereeType.Main">主裁</MudSelectItem>
                                <MudSelectItem Value="RefereeType.Normal">裁判</MudSelectItem>
                            </MudSelect>

                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>昵称</MudTh>
                            <MudTh>级别</MudTh>
                            <MudTh>邮箱</MudTh>
                            <MudTh>QQ</MudTh>
                            @if (isAdmin)
                                {
                                <MudTh>管理</MudTh>

                                }
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="昵称">@_userDatasDic[context.UserId]?.NickName</MudTd>
                            <MudTd DataLabel="级别">@context.RefereeType</MudTd>
                            <MudTd DataLabel="邮箱">@_userDatasDic[context.UserId]?.Email</MudTd>
                            <MudTd DataLabel="参赛QQ">@_userDatasDic[context.UserId]?.QQ</MudTd>
                            @if (isAdmin)
                                {
                                <MudTd DataLabel="管理">
                                    <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick=@(() => DeleteRefereeFromMatch(context))>查看队伍</MudIconButton>
                                </MudTd>

                                }

                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                </MudItem>
            </MudGrid>

        </MudTabPanel>
        @{
                int idx = 1;
            }
            @if (_pclMatch.MatchState > MatchState.Registering)
            {
                foreach (var pclRound in _pclMatch.PCLMatchRoundList)
                {
                    int roundIdx = idx;
                    <MudTabPanel Text=@($"{roundIdx}. {pclRound.PCLRoundType}")>
                        @switch (pclRound.PCLRoundType)
                        {
                            case RoundType.Swiss:

                                @switch (pclRound.PCLRoundState)
                                {
                                    case RoundState.Waiting:
                                        break;
                                    case RoundState.WaitConfirm:
                                        {
                                            <MudTable Items="pclRound.PCLRoundPlayers.OrderBy(s => s.Rank)" RowClass="odd:tw-bg-gray-100">
                                                <ToolBarContent>
                                                    <MudText Typo="Typo.h6">瑞士轮顺序确认</MudText>
                                                </ToolBarContent>
                                                <HeaderContent>
                                                    <MudTh Style="width:30px"></MudTh>

                                                    <MudTh>昵称</MudTh>
                                                    <MudTh>训练师ID</MudTh>
                                                    <MudTh>参赛ID</MudTh>
                                                    <MudTh>瑞士轮排名</MudTh>
                                                </HeaderContent>
                                                <RowTemplate>
                                                    @{
                                                        UserInfo userInfo = _userDatasDic[context.UserId];
                                                        PCLMatchPlayer pCLMatchPlayer = _matchUserDatasDic[context.UserId];

                                                    }
                                                    <MudTd></MudTd>
                                                    <MudTd DataLabel="昵称">@userInfo.NickName</MudTd>
                                                    <MudTd DataLabel="参赛QQ">@pCLMatchPlayer.QQ</MudTd>
                                                    <MudTd DataLabel="参赛ID">@pCLMatchPlayer.ShadowId</MudTd>
                                                    <MudTd DataLabel="瑞士轮排名">@context.Rank</MudTd>
                                                </RowTemplate>
            </MudTable>
                                            <MudPaper>
                                                                                <MudGrid Justify=Justify.Center>
                                                                                    <MudItem>
                                                                                        <MudButton Color=Color.Secondary Variant=Variant.Filled OnClick=@(() => RoundConfirm(pclRound))>生成对局!</MudButton>

                                                                                    </MudItem>
                                                                                </MudGrid>
                                            </MudPaper>
                                        }
                                        break;
                                    case RoundState.Running:
                                        for (int swidx = 0; swidx < pclRound.Swissidx; ++swidx)
                                        {
                                            int sswidx = swidx;
                                            var blist = pclRound.PCLBattles.OrderBy(s => s.Tag);
                                            <MudTabs Elevation="0">
                                                <MudTabPanel Text=@($"{sswidx}")>

                                                    <MudTable Items="blist.Where(s => s.SwissRoundIdx == sswidx)" Striped=true>
                                                       <ToolBarContent>
                                                            <MudText Typo="Typo.h6">瑞士轮对局</MudText>
                                                        </ToolBarContent>
                                                        <HeaderContent>
                                                            <MudTh Style="width:30px"></MudTh>
                                                        @if (pclRound.IsGroup)
                                                        {
                                                            <MudTh Style="font-weight:800; width: 70px">组号</MudTh>
                                                        }
                                                            <MudTh Style="font-weight:800; width: 70px">桌号</MudTh>
                                                            <MudTh Style="width: 150px; font-weight:800">选手1</MudTh>
                                                            <MudTh Style="width: 150px; font-weight:800">选手2</MudTh>
                                                            <MudTh Style="font-weight:800;">BO</MudTh>
                                                            <MudTh Style="font-weight:800;">选手1分数</MudTh>
                                                            <MudTh Style="font-weight:800;">选手2分数</MudTh>
                                                            <MudTh Style="width: 110px;font-weight:800">状态</MudTh>
                                                            <MudTh Style="font-weight:800;">结算</MudTh>
                                                            <MudTh Style="font-weight:800;">约和</MudTh>
                                                            <MudTh Style="font-weight:800;">双败</MudTh>
                                                            <MudTh Style="font-weight:800;">提交对局</MudTh>
                                                        </HeaderContent>
                                                        <RowTemplate>
                                                            @{
                                                                UserInfo userInfo = _userDatasDic[context.Player1Id];
                                                                PCLMatchPlayer pCLMatchPlayer1 = _matchUserDatasDic[context.Player1Id];
                                                                PCLMatchPlayer pCLMatchPlayer2 = _matchUserDatasDic[context.Player2Id];

                                                            }
                                                            <MudTd></MudTd>
                                                            @if (pclRound.IsGroup)
                                                            {
                                                                <MudTd DataLabel="组号">@context.GroupId</MudTd>
                                                            }
                                                            <MudTd DataLabel="桌号">@context.Tag</MudTd>
                                                            <MudTd DataLabel="选手1">@($"{pCLMatchPlayer1.ShadowId}")</MudTd>
                                                            <MudTd DataLabel="选手2">@($"{pCLMatchPlayer2.ShadowId}")</MudTd>
                                                            <MudTd DataLabel="BO">@context.BO</MudTd>
                                                            <MudTd DataLabel="选手1分数">
                                                                <MudNumericField Class="tw--mt-5" @bind-Value=context.Player1Score IconSize="Size.Small" Min=0 Max=context.BO />
                                                            </MudTd>
                                                            <MudTd DataLabel="选手2分数">
                                                                <MudNumericField Class="tw--mt-5" @bind-Value=context.Player2Score IconSize="Size.Small" Min=0 Max=context.BO/>
                                                            </MudTd>
                                                            <MudTd DataLabel="状态">@context.PCLBattleState</MudTd>
                                                            <MudTd DataLabel="结算">
                                                                <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Primary" Style="height: 23px; font-size:small">结算</MudButton>
                                                            </MudTd>
                                                             <MudTd DataLabel="约和">
                                                                <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Info" Style="height: 23px; font-size:small">约和</MudButton>
                                                            </MudTd>
                                                             <MudTd DataLabel="双败">
                                                                <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Info" Style="height: 23px; font-size:small">双败</MudButton>
                                                            </MudTd>
                                                             <MudTd DataLabel="双败">
                                                                <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Dark" Style="height: 23px; font-size:small">提交</MudButton>
                                                            </MudTd>
                                                        </RowTemplate>
                                                    </MudTable>
                                                </MudTabPanel>
                                            </MudTabs>
                                        }
                                        <MudStack  Row="true" Justify="Justify.Center" Class="tw-bg-white tw-p-3">
                                                    <MudButton Color=Color.Secondary Variant=Variant.Filled Class="tw-pa-3" FullWidth=false OnClick=@(() => RoundStart(pclRound))>开始下一轮瑞士轮</MudButton>
                                            </MudStack>
                                      @*   <MudPaper Class="tw-bg-white tw-pt-5 tw-pb-5" >
                                            <MudStack  Row="true">
                                                    <MudButton Color=Color.Secondary Variant=Variant.Filled Class="tw-pa-3" Style="width: 300px" OnClick=@(() => RoundStart(pclRound))>开始下一轮瑞士轮</MudButton>
                                            </MudStack>
                                        </MudPaper>*@
                                        break;
                                    case RoundState.TopConfirm:
                                        break;
                                    case RoundState.Finished:
                                        break;
                                    default:
                                        break;
                                }

                                <MudTable Items="pclRound.PCLRoundPlayers" RowClass="tw-mt-5 odd:tw-bg-gray-100">
                                    <ToolBarContent>
                                        <MudText Typo="Typo.h6">参加此轮的选手</MudText>
                                        <MudSpacer />
                                        @if (isAdmin && pclRound.PCLRoundState < RoundState.WaitConfirm)
                                        {
                        <MudAutocomplete T="PCLMatchPlayer" Label="添加新选手" @bind-Value="selectMatchPlayer" SearchFunc="@SearchMatchUser"
                                     ResetValueOnEmptyText="true"
                                     CoerceText="true"
                                     MaxItems="20"
                                     AdornmentIcon="@Icons.Material.Filled.Add" OnAdornmentClick="(args) => AddUserToRound(pclRound, selectMatchPlayer)"
                                     AdornmentColor="Color.Primary"
                                     ToStringFunc="@(e=> e==null?null : $"{e.ShadowId}({e.QQ})")">
                            <ItemTemplate>
                                <MudText>@($"{context.ShadowId}({context.QQ})")</MudText>
                            </ItemTemplate>
                        </MudAutocomplete>
                                        }

                </ToolBarContent>
                <HeaderContent>
                    <MudTh Style="width:30px"></MudTh>

                    <MudTh>昵称</MudTh>
                    <MudTh>训练师ID</MudTh>
                    <MudTh>参赛QQ</MudTh>
                    <MudTh>参赛ID</MudTh>
                    <MudTh>战绩</MudTh>
                    <MudTh>对手胜率</MudTh>
                    <MudTh>对手的对手胜率</MudTh>
                    <MudTh>查看队伍</MudTh>
                    <MudTh>编辑队伍</MudTh>
                    <MudTh>管理</MudTh>
                </HeaderContent>
                <RowTemplate>
                    @{
                                            UserInfo userInfo = _userDatasDic[context.UserId];
                                            PCLMatchPlayer pCLMatchPlayer = _matchUserDatasDic[context.UserId];

                    }
                    <MudTd />
                    <MudTd DataLabel="昵称">@userInfo.NickName</MudTd>
                    <MudTd DataLabel="训练师Id">@userInfo.TrainerId</MudTd>
                    <MudTd DataLabel="参赛QQ">@pCLMatchPlayer.QQ</MudTd>
                    <MudTd DataLabel="参赛ID">@pCLMatchPlayer.ShadowId</MudTd>
                    <MudTd DataLabel="战绩">@($"{context.Win}-{context.Draw}-{context.Lose}")</MudTd>
                    <MudTd DataLabel="对手胜率">@context.OppRatio.ToString("P2")</MudTd>
                    <MudTd DataLabel="对手的对手胜率">@context.OppOppRatio.ToString("P2")</MudTd>


                    <MudTd DataLabel="查看队伍">
                        <MudButton Variant="Variant.Filled" Size="Size.Small" Class="tw-text-bold" Color="Color.Primary" OnClick=@(() => { Dialog.Show<TeamDialogCard>("队伍编辑", new DialogParameters { { "PCLPokeTeam", context.BattleTeam } }, new MudBlazor.DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true });})>查看队伍</MudButton>
                    </MudTd>
                    <MudTd DataLabel="编辑队伍">
                        <MudButton Variant="Variant.Filled"
                                   Size="Size.Small"
                                   Class="tw-text-bold"
                                   Color="Color.Info"
                                   OnClick=@(() => { Dialog.Show<TeamDialogCard>("队伍编辑", new DialogParameters { { "PCLPokeTeam", context.BattleTeam } }, new MudBlazor.DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true });})>编辑队伍</MudButton>
                    </MudTd>
                    <MudTd DataLabel="管理">
                        @if (pclRound.PCLRoundState == RoundState.Waiting)
                                            {
                        <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick=@(() => DeleteUserFromRound(pclRound, context))>查看队伍</MudIconButton>
                                            
                                            }
                                            else {
                        <MudButton Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick=@(() => DeleteUserFromRound(pclRound, context))>Dorp</MudButton>

                                            }
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
                                @if (pclRound.PCLRoundState == RoundState.Waiting)

                                {
                                    <MudPaper Class="tw-mt-3">
                                        <MudGrid Justify=Justify.Center>
                                            <MudItem>
                                                <MudButton Color=Color.Secondary Variant=Variant.Filled OnClick=@(() => RoundStart(pclRound))>开始本轮!</MudButton>

                                            </MudItem>
                                        </MudGrid>
                                    </MudPaper>
                                }



                                break;
                            case RoundType.Robin:

                                break;
                            case RoundType.Elimination:
                                break;
                            default:
                                break;
                        }


                    </MudTabPanel>

                    idx++;
                }
            }

        </MudTabs>
    </MudContainer>
}

@code {
    [Parameter]
    public int Id { get; set; }
    string _userId;
    UserInfo userData;
    UserInfo value2;
    UserInfo value3;

    PCLMatchPlayer selectMatchPlayer;

    RefereeType value4 = RefereeType.Normal;
    bool isAdmin = false;
    bool isReferee = false;

    int selectId = 0;

    string searchString;
    Dictionary<string, UserInfo> _userDatasDic;
    Dictionary<string, PCLMatchPlayer> _matchUserDatasDic;
    List<UserInfo> _userDatas;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        try
        {
            if (user.Identity.IsAuthenticated)
            {
                //_userId = await UserServices.GetUserIdByEmail(user.Identity.Name);
                userData = await UserServices.GetUserByNameAsync(user.Identity.Name);
            }
            else
            {
                return;

            }
            isAdmin = user.IsInRole("Admin");
            _pclMatch = await MatchService.GetMatchByIdAsync(Id);
            if (_pclMatch.UserId == userData.UserId)
            {
                isAdmin = true;
                // 如果是主裁 赋予最高权限
                // 否则 赋予裁判权限
            }
            // 还可能是裁判
            if (userData.UserId != _pclMatch.UserId && !isAdmin)
            {
                Navigation.NavigateTo("/");
            }
            _userDatas = (await UserServices.GetAllUserAsync());
            _userDatasDic = _userDatas.ToDictionary(s => s.UserId);
            _matchUserDatasDic = _pclMatch.PCLMatchPlayerList.ToDictionary(s => s.UserId);
            selectId = _pclMatch.RoundIdx + 1;

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}
